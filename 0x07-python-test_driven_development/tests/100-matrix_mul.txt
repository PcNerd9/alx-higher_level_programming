>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]

>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]

>>> print(matrix_mul([[3, 4], [5, 6]], [[1, 2]]))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> print(matrix_mul([[1, 2]], 3))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> print(matrix_mul(5, [[1, 2]]))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(matrix_mul(5, 4))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(matrix_mul("string", [[1, 2, 3]]))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(matrix_mul([[1, 2, 3]], "string"))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> print(matrix_mul([1, 2, 4], [[1, 3, 4], [4, 5, 6]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> print(matrix_mul([[1, 3, 4], [4, 5, 6]], [1, 3, 5]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> print(matrix_mul([], [[1, 3, 5], [3, 5, 6]]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(matrix_mul([[1, 3, 5], [5, 6, 4]], [[]]))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> print(matrix_mul([[]], [[]]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(matrix_mul([[1, 2, '3']], [[1, 2, 4], [4, 3, 5], [5, 3, 6]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> print(matrix_mul([[1, 3, 4]], [[1, 3, 5], [6, '6', 7], [5, 0, 8]]))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> print(matrix_mul([[1, 3, '4']], [[1, '5', 9], [1, 2, 4], [9, 8, 't']]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> print(matrix_mul([[1, 2, 3], [2, 4, 5, 5]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> print(matrix_mul([[1, 2, 3], [2, 4, 4]], [[1, 2, 3], [4, 5, 6, 7], [8, 9, 10]]))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> print(matrix_mul([[1, 2, 3], [5, 4, 8, 9]], [[1, 2, 3], [4, 5, 6, 7], [8, 9, 10]]))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> print(matrix_mul([[2, 3, 4], [2, 6, 3]], [[2, 4, 1], [2, 6, 7], [3, 2, 1]]))
[[22, 34, 27], [25, 50, 47]]

>>> print(matrix_mul([[2, 4, 1], [2, 6, 7], [3, 2, 1]], [[2, 3, 4], [2, 6, 3]]))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied


>>> print(matrix_mul([[2, 8, 1], [10, 15, 2], [2, 7, 2]], [[1, 4, 6], [8, 9, 9], [2, 8, 5]]))
[[68, 88, 89], [134, 191, 205], [62, 87, 85]]


>>> print(matrix_mul([[1, 2, 3]], [[1], [2], [3]]))
[[14]]

>>> print(matrix_mul([[1], [2], [3]], [[1, 2, 3]]))
[[1, 2, 3], [2, 4, 6], [3, 6, 9]]

>>> print(matrix_mul([[2, 4, 6], [8, 10, 12]], [[3, 1], [2, 2], [6, 8]]))
[[50, 58], [116, 124]]

>>> print(matrix_mul([[3, 1], [2, 2], [6, 8]], [[2, 4, 6], [8, 10, 12]]))
[[14, 22, 30], [20, 28, 36], [76, 104, 132]]

>>> print(matrix_mul([[3,1], [], [6, 8]], [[2, 4, 6], [8, 10, 12]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> print(matrix_mul([[3, 1], [2, 2], [6, 8]], [[2, 4, 6], []]))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

