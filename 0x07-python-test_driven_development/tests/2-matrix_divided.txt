>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix_divided([[2, 4, 6, 8], [10, 12, 14, 16]], 2)
[[1, 2, 3, 4], [5, 6, 7, 8]]

>>> matrix_divided([[-2, -4, -6], [-10, -12, -14], [-16, -18, -20]], 2)
[[-1, -2, -3], [-5, -6, -7], [-8, -9, -10]]

>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(1, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("string", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7], [8, 9, 10]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [4, 'e', 5], [6, 7, 8]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], "string", [4, 5, 6]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "string")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 4], [4, 'e', 5]], "string")
Traceback (most recent call last):
TypeError: div must be a number
